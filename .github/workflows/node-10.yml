name: Test build on different node versions on all platforms

on:
  schedule:
  - cron: '0 12 * * 0'

  push:
    branches: [main]

  workflow_dispatch:

jobs:
  test-node:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [10.x]
    runs-on: ${{ matrix.os }}
    outputs:
      gh-node-version: ${{matrix.node-version}}
      node-version: ${{ steps.node_version.outputs.version }}
    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get exact nodejs version
      id: node_version
      run: |
        echo "::set-output name=version::$(node --version)"

    - name: Install dependencies
      run: npm install

    - name: Install dependencies
      run: npm ci

    - name: Confirm build works with Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
      run: npm run build

  create-badges:
    needs: [test-node]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create success badge
        if: ${{ needs.test-node.result === 'success' }}
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          ICON: https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original.svg
          NAME: ${{ needs.test-node.outputs.gh-node-version }}
          LABEL: "${{ needs.test-node.outputs.node-version }}"
          STATUS: ${{needs.test-node.result}}
          COLOR: green
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create failure badge
        if: ${{ needs.test-node.result !== 'success' }}
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          ICON: https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original.svg
          NAME: ${{ needs.test-node.outputs.gh-node-version }}
          LABEL: "${{ needs.test-node.outputs.node-version }}"
          STATUS: ${{needs.test-node.result}}
          COLOR: red
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
